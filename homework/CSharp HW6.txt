Shaevaun Morlis
HW C# 6
1. What is an exception?  An exception is a problem that arises during the execution of a program. Exceptions provide a way to transfer control from one part of a program to another. 
2. What happens in a try block if the program executes without errors? In a try block, if none of the statements generates an exception. Then they all simply just run as intended.
3. How does the catch mechanism work for unhandled exceptions? 
If there is no matching catch handle, then the calling method immediately exits, and execution returns to its caller, where the process is repeated. 
4. What happens in a program if an exception block fails to handle an particular error? If it fails to handle a particular error, the program will stop and report the exceptions that are unhandled. 
5. What is the parent class for all exceptions? How does this work? Exceptions are organized into families which are called inheritance hierarchies. The over-all top for all Exceptions is simply called Exceptions. 
6. How do you determine the type of an error? Visual Studio has built in processes that catch the errors and inform of their types. 
7. What is the purpose of integer checking? The purpose of INT checking is to look for overflow.  
8. What is the range of values than a signed Int32 type can contain? State the lowest value and the
highest value.  
It is a safety net in a sense. It is a way to ensure that a statement is always ran, even if an exception has been thrown out. 
9. What is the range of values than an unsigned Int32 type can contain? State the lowest value and the
highest value. What is the difference between a signed integer and an unsigned integer? Can signed
integers and unsigned integers represent the same amount of numbers?  -2,147,483,648 to 2,147,483,647. In laymen's terms an unsigned int is an integer that can not be negative and thus has a higher range of positive values that it can assume. A signed int is an integer that can be negative but has a lower positive range in exchange for more negative values it can assume. 
10. What does the finally block do? The finally block will execute when the try/catch block leaves the execution, no matter what condition cause it. It always executes whether the try block terminates normally or terminates due to an exception. The main purpose of finally block is to release the system resources. 
11. (Thought question) When would you not use a finally block in a try/catch construction?
An infinite loop would prevent a finally block being called. 
